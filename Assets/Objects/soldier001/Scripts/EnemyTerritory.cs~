//
// EnemyTerritory.cs
//
// Author:
//       Rafael Julio <Rafael_Julio11@hotmail.com>
//
// Copyright (c) 2017 Acre Company
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
using UnityEngine;

public class EnemyTerritory : MonoBehaviour
{
  public SphereCollider territory;
  GameObject player;
  bool playerInTerritory;

  public GameObject enemy;
  BasicEnemy basicenemy;

  // Use this for initialization
  void Start ()
  {
    player = GameObject.FindGameObjectWithTag("Player");
    basicenemy = enemy.GetComponent <BasicEnemy> ();
    playerInTerritory = false;
  }

  // Update is called once per frame
  void Update ()
  {
    if (playerInTerritory == true)
    {
      basicenemy.MoveToPlayer ();
    }

    if (playerInTerritory == false)
    {
      basicenemy.Rest ();
    }
  }

  void OnTriggerEnter (Collider other)
  {
    if (other.gameObject == player)
    {
      playerInTerritory = true;
    }
  }

  void OnTriggerExit (Collider other)
  {
    if (other.gameObject == player) 
    {
      playerInTerritory = false;
    }
  }
}

public class BasicEnemy : MonoBehaviour
{
  public Transform target;
  public float speed = 3f;
  public float attack1Range = 1f;
  public int attack1Damage = 1;
  public float timeBetweenAttacks;


  // Use this for initialization
  void Start ()
  {
    Rest ();
  }

  // Update is called once per frame
  void Update ()
  {

  }

  public void MoveToPlayer ()
  {
    //rotate to look at player
    transform.LookAt (target.position);
    transform.Rotate (new Vector3 (0, -90, 0), Space.Self);

    //move towards player
    if (Vector3.Distance (transform.position, target.position) > attack1Range) 
    {
      transform.Translate (new Vector3 (speed * Time.deltaTime, 0, 0));
    }
  }

  public void Rest ()
  {

  }
}